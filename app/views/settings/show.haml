- content_for :javascript do
  initialize_update_profile_info_form("#{I18n.locale}","#{target_user.id.to_s}", #{@current_community.real_name_required?});

- content_for :extra_javascript do
  - maps_key = MarketplaceHelper.google_maps_key(@current_community.id)
  - key_param = maps_key ? "?key=#{maps_key}" : ""
  - needs_maps = !FeatureFlagHelper.feature_enabled?(:topbar_v1) || search_mode == :keyword
  = javascript_include_tag "https://maps.googleapis.com/maps/api/js#{key_param}" if needs_maps

- content_for :title_header do
  %h1= t("layouts.no_tribe.settings")

= render :partial => "layouts/left_hand_navigation", :locals => { :links => settings_links_for(target_user, @current_community) }

#person_settings_form.left-navi-section.settings-section
  %p
    = t("settings.profile.these_fields_are_shown_in_your")
    = link_to(t("settings.profile.profile_page"), target_user) + "."

  = form_for target_user do |form|
    = form.label :given_name, t("settings.profile.given_name")
    = form.text_field :given_name, :class => "text_field", :maxlength => "30"
    .inline-label-container
      = form.label :family_name, t("settings.profile.family_name"), :class => "inline"
      %small
        - if ["first_name_with_initial", "first_name_only"].include? @current_community.name_display_type
          = t("settings.profile.#{@current_community.name_display_type}")
    = form.text_field :family_name, :class => "text_field", :maxlength => "30"

    -# Location
    .inline-label-container
      = form.label :street_address, t("settings.profile.street_address"), :class => "inline"
      %small
        = t('settings.profile.default_in_listing')
    = form.text_field :street_address, :class => "text_field", :onkeyup => "timed_input(this)"
    %small
      = t("settings.profile.location_description")
    #settings_map_canvas.map
      - content_for :extra_javascript do
        :javascript
          source = document.getElementById("person_street_address");
          $(document).ready(function(){
            googlemapMarkerInit("settings_map_canvas","person_location","person_street_address", true, #{tribe_latitude}, #{tribe_longitude});
            });

    -# Phone number
    .inline-label-container
      = form.label :phone_number, t("settings.profile.phone_number"), :class => "inline"
      %small
        = t('settings.profile.invisible')
    = form.text_field :phone_number, :class => "text_field", :maxlength => "25"

    -# Profile picture
    = form.label :image, t("settings.profile.profile_picture")
    = form.file_field :image, :size => 30, :id => "avatar_file"


    -# About text
    = form.label :description, t("settings.profile.about_you"), :class => "input"
    = form.text_area :description, :class => "update_profile_description_text_area"

    = form.label :about_us, t("settings.profile.about_us"), :class => "input"
    = form.text_area :about_us, :class => "update_profile_description_text_area"

    -# Image attachments
    = form.label :image_attachments, t("settings.profile.image_attachments")
    - target_user_pictures = target_user.pictures
    %input#fileDragName{:name => "file_name", :type => "hidden", :value => ""}/
    %input#fileDragSize{:name => "size", :type => "hidden", :value => ""}/
    %input#fileDragType{:name => "type", :type => "hidden", :value => ""}/
    %input#fileDragData{:name => "image_base64", :type => "hidden", :value => ""}/
    %input#files{:multiple => "true", :name => "img", :style => "display:none", :type => "file"}/
    %input#idsContainer{:name => "ids_container", :type => "hidden", :value => ""}/
    #image-uploader-container.listing-images
      - if target_user.pictures.present?
        - target_user.pictures.each_with_index do |target_user_picture,index|
          #fileupload.fileinput-button.upload-image-placeholder{:class => "old-#{index}"}
            %input.checkbox{:type => "checkbox"}/
            %span{id: "#{target_user_picture.id}"}
            = image_tag target_user_picture.image, class: "thumbnail"
        - if target_user.pictures.count == 1
          #fileupload.fileinput-button.upload-image-placeholder.childToBeKeptFirst{:onclick => "$('#files').click();"}
            .fileupload-text-container{:style => ""}
              .fileupload-centered-text
                .fileupload-text Select file
                .fileupload-small-text
                .fileupload-error-text
            %img.fileupload-preview-image{:style => "display: none;"}/
            .fileupload-preview-remove-image
              %i.icon-remove.icon-fix
            %input.listing-image-id{:name => "listing_images[][id]", :type => "hidden"}/
      - else
        #fileupload.fileinput-button.upload-image-placeholder.childToBeKeptFirst{:onclick => "$('#files').click();"}
          .fileupload-text-container{:style => ""}
            .fileupload-centered-text
              .fileupload-text Select file
              .fileupload-small-text
              .fileupload-error-text
          %img.fileupload-preview-image{:style => "display: none;"}/
          .fileupload-preview-remove-image
            %i.icon-remove.icon-fix
          %input.listing-image-id{:name => "listing_images[][id]", :type => "hidden"}/
        #fileupload.fileinput-button.upload-image-placeholder.childToBeKeptSecond{:onclick => "$('#files').click();"}
          .fileupload-text-container{:style => ""}
            .fileupload-centered-text
              .fileupload-text Select file
              .fileupload-small-text
              .fileupload-error-text
          %img.fileupload-preview-image{:style => "display: none;"}/
          .fileupload-preview-remove-image
            %i.icon-remove.icon-fix
          %input.listing-image-id{:name => "listing_images[][id]", :type => "hidden"}/
      
      #fileupload.fileinput-button.upload-image-placeholder.childToBeKeptLast{:onclick => "$('#files').click();"} 
        .fileupload-text-container{:style => ""}
          .fileupload-centered-text
            .fileupload-text + Add more
            .fileupload-small-text
            .fileupload-error-text
        %img.fileupload-preview-image{:style => "display: none;"}/
        .fileupload-preview-remove-image
          %i.icon-remove.icon-fix
        %input.listing-image-id{:name => "listing_images[][id]", :type => "hidden"}/
        
    = form.fields_for :location do |loc|
      = loc.hidden_field :address, :value => target_user.location.address
      = loc.hidden_field :google_address, :value => target_user.location.google_address
      = loc.hidden_field :latitude, :value => target_user.location.latitude
      = loc.hidden_field :longitude, :value => target_user.location.longitude
    = form.button t("settings.save_information"), :class => "send_button"

:javascript
  window.onload = function(){
    //Check File API support
    if(window.File && window.FileList && window.FileReader){
      var filesInput = document.getElementById("files");
      filesInput.addEventListener("change", function(event){
        var add_image_link = $('.childToBeKeptLast');
        var temp_add_image_link = add_image_link;
        var exist_image_count = $('#fileupload .thumbnail').length;
        var all_exist_image_count = $('.listing-images img.thumbnail').length;
        var temp = $('.childToBeKeptSecond');
        var files = event.target.files; //FileList object
        var output = document.getElementById("image-uploader-container");
        for(var i = 0; i< files.length; i++){
          
          if (all_exist_image_count > 4){
            alert('you get an error message saying that the image uploading limit has been exceeded.');
            return false
          }
          else{
          }
            var sep = '&&&=>'
            document.getElementById('fileDragName').value = document.getElementById('fileDragName').value + sep + files[i].name
            document.getElementById('fileDragSize').value =  document.getElementById('fileDragSize').value + sep + files[i].size
            document.getElementById('fileDragType').value = document.getElementById('fileDragType').value + sep + files[i].type
            reader = new FileReader();
            reader.onload = function(event) {
              document.getElementById('fileDragData').value =  document.getElementById('fileDragData').value+sep+ event.target.result;}
            reader.readAsDataURL(files[i]);
            var file = files[i];
            //Only pics
            if (file.type.match('jpeg') || file.type.match('jpg') || file.type.match('png')){
            }else{
              alert('you get an error message saying that the image attachment should be JPEG, PNG, JPG.');
              return false; 
            }
            if(!file.type.match('image'))
              continue;
            var picReader = new FileReader();
            picReader.addEventListener("load",function(event){
              var picFile = event.target;
              var div = document.createElement("div");
              div.innerHTML = "<div class='fileinput-button upload-image-placeholder new-#{SecureRandom.hex(2)}' id='fileupload'><input type='checkbox' class='checkbox'><img class='thumbnail' src='" + picFile.result + "'" +
                      "title='" + picFile.name + "'/></div>";
              output.insertBefore(div ,null);
              add_image_link.remove();
              $('#image-uploader-container').append(temp_add_image_link);
              if (exist_image_count == 2) {
                $('.childToBeKeptSecond').remove();
                $('.childToBeKeptFirst').remove();
              } else if (exist_image_count == 1) {
                $('.childToBeKeptFirst').remove();
                $('.childToBeKeptSecond').remove();
                $(temp).insertBefore( ".childToBeKeptLast" );
              }
            });
             //Read the image
            picReader.readAsDataURL(file);
          }                              
      });
    }
    else
    {
      console.log("Your browser does not support File API");
    }
    delete_image();
  }
  
  function delete_image(){
    $('input:checkbox').on('change',function(){
      class_obj = $(this).parent().attr("class").split(' ')[1];
      if (class_obj.match('new-') || class_obj.match('old-')){
        if (this.checked){
          if (confirm("Are you sure you want to do this?")) {
            $('.'+class_obj).remove();
            picture_id = $(this).next()[0].id
            $.ajax({
              type:'Post', 
              url: '/settings/destroy_picture', 
              data: $.param({ id: picture_id, picture_destroy: true})
            });
          }
          else{
            this.checked = false;
          }
        }
        else{
        }
      }
    });
  }


:css
  .checkbox { position: absolute; top: 10px !important; right: 10px !important; }
  .fileinput-button input { opacity: 1 !Important }